[gd_scene load_steps=7 format=2]

[ext_resource path="res://scripts/GreatWall.gd" type="Script" id=1]
[ext_resource path="res://materials/FunkyWall.shader" type="Shader" id=2]
[ext_resource path="res://materials/verbot.jpg" type="Texture" id=3]

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = ExtResource( 2 )
shader_param/color_multiplier = Vector3( 1, 1, 0 )
shader_param/uv_scale = 3.0
shader_param/mix_move = true
shader_param/shifter = 8
shader_param/alpha_mult = 0.5
shader_param/speed_mult = 0.4
shader_param/noise_tex = ExtResource( 3 )
_sections_unfolded = [ "shader_param" ]

[sub_resource type="PlaneMesh" id=1]

custom_aabb = AABB( 0, 0, 0, 0, 0, 0 )
size = Vector2( 20, 20 )
subdivide_width = 0
subdivide_depth = 0

[sub_resource type="ConcavePolygonShape" id=3]

data = PoolVector3Array( 10, 0, 10, -10, 0, 10, 10, 0, -10, -10, 0, 10, -10, 0, -10, 10, 0, -10 )

[node name="GreatWall" type="Spatial"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10 )
script = ExtResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="." index="0"]

transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
layers = 1
material_override = SubResource( 2 )
cast_shadow = 0
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
mesh = SubResource( 1 )
skeleton = NodePath("..")
material/0 = null
_sections_unfolded = [ "Geometry", "material" ]

[node name="StaticBody" type="StaticBody" parent="MeshInstance" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -10, -4.37114e-07 )
input_ray_pickable = true
input_capture_on_drag = false
collision_layer = 1
collision_mask = 1
friction = 1.0
bounce = 0.0
constant_linear_velocity = Vector3( 0, 0, 0 )
constant_angular_velocity = Vector3( 0, 0, 0 )
_sections_unfolded = [ "Collision" ]

[node name="CollisionShape" type="CollisionShape" parent="MeshInstance/StaticBody" index="0"]

shape = SubResource( 3 )
disabled = false


